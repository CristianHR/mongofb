0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/0.10.24/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/bryant/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
12 verbose folder .
13 info prepublish mongofb@0.5.8
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/bryant/.npm/1f1177db-tar.lock
16 silly lockFile d00d1671-193745-0-891269747633487-tmp-tgz tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
17 verbose lock tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz /Users/bryant/.npm/d00d1671-193745-0-891269747633487-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile d00d1671-193745-0-891269747633487-tmp-tgz tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
21 silly lockFile d00d1671-193745-0-891269747633487-tmp-tgz tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
22 verbose tar unpack /var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
23 silly lockFile a9210806-193745-0-891269747633487-package tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
24 verbose lock tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package /Users/bryant/.npm/a9210806-193745-0-891269747633487-package.lock
25 silly lockFile d00d1671-193745-0-891269747633487-tmp-tgz tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
26 verbose lock tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz /Users/bryant/.npm/d00d1671-193745-0-891269747633487-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry CHANGELOG.md
32 silly gunzTarPerm extractEntry examples/client.coffee
33 silly gunzTarPerm extractEntry examples/server.coffee
34 silly gunzTarPerm extractEntry lib/client.coffee
35 silly gunzTarPerm extractEntry lib/server.coffee
36 silly lockFile a9210806-193745-0-891269747633487-package tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
37 silly lockFile a9210806-193745-0-891269747633487-package tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
38 silly lockFile d00d1671-193745-0-891269747633487-tmp-tgz tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
39 silly lockFile d00d1671-193745-0-891269747633487-tmp-tgz tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/tmp.tgz
40 verbose tar pack [ '/Users/bryant/.npm/mongofb/0.5.8/package.tgz',
40 verbose tar pack   '/var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package' ]
41 verbose tarball /Users/bryant/.npm/mongofb/0.5.8/package.tgz
42 verbose folder /var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
43 silly lockFile a9210806-193745-0-891269747633487-package tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
44 verbose lock tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package /Users/bryant/.npm/a9210806-193745-0-891269747633487-package.lock
45 silly lockFile 4c7b647b-nt-npm-mongofb-0-5-8-package-tgz tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz
46 verbose lock tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz /Users/bryant/.npm/4c7b647b-nt-npm-mongofb-0-5-8-package-tgz.lock
47 silly lockFile a9210806-193745-0-891269747633487-package tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
48 silly lockFile a9210806-193745-0-891269747633487-package tar:///var/folders/tr/6zpkstq12zs_d_hfrhpd77dh0000gn/T/npm-2495-7FUsRhei/1391500193745-0.891269747633487/package
49 silly lockFile 4c7b647b-nt-npm-mongofb-0-5-8-package-tgz tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz
50 silly lockFile 4c7b647b-nt-npm-mongofb-0-5-8-package-tgz tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz
51 silly lockFile f6d20b86-bryant-npm-mongofb-0-5-8-package /Users/bryant/.npm/mongofb/0.5.8/package
52 verbose lock /Users/bryant/.npm/mongofb/0.5.8/package /Users/bryant/.npm/f6d20b86-bryant-npm-mongofb-0-5-8-package.lock
53 silly lockFile f6d20b86-bryant-npm-mongofb-0-5-8-package /Users/bryant/.npm/mongofb/0.5.8/package
54 silly lockFile f6d20b86-bryant-npm-mongofb-0-5-8-package /Users/bryant/.npm/mongofb/0.5.8/package
55 verbose tar unpack /Users/bryant/.npm/mongofb/0.5.8/package.tgz
56 silly lockFile 1a226d85-bryant-npm-mongofb-0-5-8-package tar:///Users/bryant/.npm/mongofb/0.5.8/package
57 verbose lock tar:///Users/bryant/.npm/mongofb/0.5.8/package /Users/bryant/.npm/1a226d85-bryant-npm-mongofb-0-5-8-package.lock
58 silly lockFile 4c7b647b-nt-npm-mongofb-0-5-8-package-tgz tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz
59 verbose lock tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz /Users/bryant/.npm/4c7b647b-nt-npm-mongofb-0-5-8-package-tgz.lock
60 silly gunzTarPerm modes [ '755', '644' ]
61 silly gunzTarPerm extractEntry package.json
62 silly gunzTarPerm extractEntry .npmignore
63 silly gunzTarPerm extractEntry README.md
64 silly gunzTarPerm extractEntry CHANGELOG.md
65 silly gunzTarPerm extractEntry examples/client.coffee
66 silly gunzTarPerm extractEntry examples/server.coffee
67 silly gunzTarPerm extractEntry lib/client.coffee
68 silly gunzTarPerm extractEntry lib/server.coffee
69 silly lockFile 1a226d85-bryant-npm-mongofb-0-5-8-package tar:///Users/bryant/.npm/mongofb/0.5.8/package
70 silly lockFile 1a226d85-bryant-npm-mongofb-0-5-8-package tar:///Users/bryant/.npm/mongofb/0.5.8/package
71 silly lockFile 4c7b647b-nt-npm-mongofb-0-5-8-package-tgz tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz
72 silly lockFile 4c7b647b-nt-npm-mongofb-0-5-8-package-tgz tar:///Users/bryant/.npm/mongofb/0.5.8/package.tgz
73 verbose chmod /Users/bryant/.npm/mongofb/0.5.8/package.tgz 644
74 verbose chown /Users/bryant/.npm/mongofb/0.5.8/package.tgz [ 501, 20 ]
75 silly lockFile 3a52ce78- .
76 silly lockFile 3a52ce78- .
77 silly publish { author: { name: 'Bryant Williams', email: 'b.n.williams@gmail.com' },
77 silly publish   dependencies:
77 silly publish    { 'asset-wrap': '0.6.x',
77 silly publish      deepmerge: '0.2.x',
77 silly publish      express: '3.4.x',
77 silly publish      firebase: '1.0.x',
77 silly publish      'firebase-token-generator': '0.1.x',
77 silly publish      'jwt-simple': '0.1.x',
77 silly publish      'lru-cache': '2.5.x',
77 silly publish      mongodb: '1.3.x',
77 silly publish      'node.extend': '1.0.x',
77 silly publish      request: '2.33.x' },
77 silly publish   description: 'Mongo Firebase',
77 silly publish   main: './lib/server',
77 silly publish   name: 'mongofb',
77 silly publish   repository: { type: 'git', url: 'git://github.com/scien/mongofb.git' },
77 silly publish   version: '0.5.8',
77 silly publish   readme: '# MongoFB\n\n## Table of Contents\n\n - [General Information](#general-information)\n  - [What is MongoFB](#what-is-mongofb)\n  - [Diagram](#diagram)\n - [Usage](#usage)\n  - [Server Configuration](#server-configuration)\n  - [Server API](#server-api)\n  - [Server Hooks](#server-hooks)\n  - [Authentication](#authentication)\n  - [Client SDK](#client-sdk)\n - [Examples](#examples)\n  - [Server](#server)\n  - [Javascript Client](#javascript-client) \n  - [iOS Client](#ios-client) \n  - [Android Client](#android-client) \n\n## General Information\n\n### What is MongoFB\n\nMongoFB is a combination of MongoDB and Firebase. You can run your MongoDB\nanywhere you like, and sign up for your own Firebase account.  MongoFB\nprovides an API so you can query, index, and aggregate your data (all the\nthings you wish your firebase could do).  MongoFB uses Firebase as its\nmaster source of data, so you get built in Security Rules, Authentication,\nand can listen for updates on any document of any collection, or any field\nof any document (all the things you wish your mongodb would do).\n\n - Firebase\n   - Security/Authentication\n   - WebSockets\n - MongoDB\n   - querying\n   - indexing\n   - aggregation\n\n### Diagram\n![Diagram](http://media.lessthan3.com/wp-content/uploads/2013/07/mongofb.png)\n\n## Usage\n\n### Sever Configuration\n\nMongoFB can be included in your express or zappajs server, using middleware.\n```\nmongofb = require \'mongofb\'\n\napp.use mongofb {\n  root: \'/api/1\'      # the root url to host mongofb on\n  cache:\n    max: 100          # the max number of results to store in a local LRU cache\n    maxAge: 1000*60*5 # the max age of any result in the LRU cache\n  firebase:\n    url: \'\'           # the url of your firebase\n    secret: \'\'        # your firebase secret - only needed if your firebase has security rules\n  mongodb:\n    db: \'test\'        # the mongodb to connect to\n    host: \'localhost\' # the host of your mongodb\n    pass: \'\'          # the password to connect with\n    port: 27017       # the port to connect to\n    user: \'admin\'     # the user to connect with\n    options: {}       # other connection options [ref](#https://github.com/mongodb/node-mongodb-native/blob/master/docs/articles/MongoClient.md#basic-parts-of-the-url)\n}\n```\n\n\n### Server API\n\n/API-ROOT/mongofb.js\n```\nServes the javascript client\n```\n\n/API-ROOT/Firebase\n```\nLet\'s the client look up the public url of your Firebase\n```\n\n/API-ROOT/ObjectId\n```\nThe client calls here to get a new ObjectID before writing to Firebase\n```\n\n/API-ROOT/sync/:collection/:id\n```\nAfter an insert, update, or remove, a client will tell the server it needs to\nupdate data in Firebase. The server will then pull the most up-to-date data\ndirectly from Firebase and write it to MongoDB for querying.\n```\n\n/API-ROOT/:collection/find\n```\nPerform a db.collection.find on your MongoDB. Pass your query as query\nparameters to this endpoint. The result is returned as an array.\n\nspecial options\n - limit: limits the number of results in the response\n```\n\n/API-ROOT/:collection/findOne\n```\nPerform a db.collection.findOne on your MongoDB. Pass your query as query\nparameters to this endpoint. The result is returned as an object\n```\n\n/API-ROOT/:collection/:id*\n```\nPerform a db.collection.findOne by {_id: ObjectID()} on your MongoDB. Pass your\nquery as query parameters to this endpoint. The result is returned as an object.\n\nThis endpoint functions more like a standard resource url as no query parameters\nare used.  This method also lets you query for specific fields of a document.\n\nexample: /API-ROOT/posts/510b56c221168da296f27bd5/author/name\n\nThe above might be a posts collection for my blog. With this I could directly\naccess the author\'s name of post 510b56c221168da296f27bd5.\n\nThe corresponding Firebase URL for that data would be\nhttps://my-firebase.firebaseio.com/posts/510b56c221168da296f27bd5/author/name\n```\n\n### Server Hooks\nSometimes you may want to modify the response from your api, or set default\nvalues for parameters, or do something special if the user is authenticated.\nThis is all possible with MongoFB Hooks.\n\nYou can define your hooks in your server configuration. The current hooks\navailable are...\n\nnew_query = collection.before.find(query)\n\nnew_doc = collection.after.find(doc)\n\n\nExample Usage\n```\napp.use mongofb {\n  firebase: config.firebase\n  mongofb: config.mongodb\n  root: \'/api/1\'\n  hooks:\n    users:\n      after:\n        find: (doc) ->\n          # hide private user information to other users\n          return doc if @user?.auth?.id == doc.id\n          {_id: doc._id, public: doc.public}\n    posts:\n      before:\n        find: (query) ->\n          # an author changed their name\n          if query.author?.name == \'joe\'\n            query.author.name = \'joey\'\n\n          # if we search for football or baseball, also search all sports\n          if query.tag in [\'football\', \'baseball\']\n            query.tag = [query.tag, \'sports\']\n\n          # force a small limit\n          query.limit = 10\n}\n```\n\n### Authentication\nauthenticate any request by passing a token query parameter with the\nvalue being the users\' firebase token.\n\nThe @user can then be referenced in your hooks\n\n### Client SDK\nHow to use the Javascript SDK\n\nClasses\n```\nmongofb.Database\nmongofb.Collection\nmongofb.Document\nmongofb.DocumentRef\n```\n\nmongofb.Database\n```\n# This is the equivalent to a MongoDB Database\n\n# Connect to our MongoFB server\ndb = new mongofb.Database \'http://localhost:3000/API-ROOT\'\n\n# Get a collection\nposts = db.collection \'posts\'\nposts = db.get \'posts\' \n\n# Get a document directly\npost = db.collection(\'posts\').get(\'510b56c221168da296f27bd5\')\npost = db.get(\'posts/510b56c221168da296f27bd5\')\npost = db.get(\'posts.510b56c221168da296f27bd5\')\n\n# Get a field from a document directly\nname = db.get(\'posts/510b56c221168da296f27bd5/author/name\')\nname = db.get(\'posts.510b56c221168da296f27bd5.author.name\')\n```\n\nmongofb.Collection\n```\n# This is the equivalent to a MongoDB Collection\n\n# Get a collection\nusers = db.collection \'users\'\nusers = db.get \'users\'\n\n# Insert a document (this method must be asynchronous)\nusers.insert {foo: \'bar\'}, (err, user) ->\n  throw err if err\n  console.log user.val()\n\n# Run a find query (synchronous)\ndocs = users.find {foo: \'bar\'}\n\n# Run a find query (asynchronous)\nusers.find {foo: \'bar\'}, (err, docs) ->\n  throw err if err\n  console.log docs\n\n# Run a findById (synchronous)\nuser = users.findById \'510b56c221168da296f27bd5\'\n\n# Run a findById (asynchronous)\nusers.findById \'510b56c221168da296f27bd5\', (err, user) ->\n  throw err if err\n  console.log user\n\n# Run a findOne (synchronous)\nuser = users.findOne {foo: \'bar\'}\n\n# Run a findOne (asynchonous)\nusers.findOne {foo: \'bar\'}, (err, user) ->\n  throw err if err\n  console.log user\n\n# Remove a document (this method must be asynchronous)\n# only allowed to remove by id\nusers.remove \'510b56c221168da296f27bd5\', (err) ->\n  throw err if err\n```\n\nmongofb.Document\n```\n# This is the equivalent of a MongoDB Document\npost = posts.findById \'510b56c221168da296f27bd5\'\n\n# Update a field in a Document\npost.get(\'author.name\').set(\'new author\')\n\n# update an entire Document\npost.set {author: {name: \'the author\'}, content: \'long post\'}\n\n# get json for a document\npost.val()\n\n# listeners\npost.on \'update\', (val) ->\n  # called when this document is updated\n\npost.on \'value\', (val) ->\n  # called immediately, and when the document is updated\n\npost.on \'remove\', (val) ->\n  # called when the post is removed from the database\n```\n\nmongofb.DocumentRef\n```\n# A DocumentRef is a reference to a field of a Document\n\n# Get a ref\nref = post.get(\'author.name\')\n\n# add listeners\nref.on \'update\', (val) ->\nref.on \'value\', (val) ->\n\n# remove listeners\nref.off \'update\'\nref.off \'value\'\nref.off()\n\n# get the parent ref\nref.parent()\n\n# change the value of this property\nref.set(\'new author\')\n\n# get the json value for this ref\nref.val()\n\n\n```\n\n## Examples\n\n### Server\n```\nexpress = require \'express\'\nmongofb = require \'../lib/server\'\n\napp = express()\napp.use mongofb {\n  firebase:\n    url: \'https://vn42xl9zsez.firebaseio-demo.com/\'\n  mongodb:\n    host: \'localhost\'\n    port: 27017\n  root: \'/api/v2\'\n}\napp.get \'/\', (req, res) ->\n  res.send """\n  <html>\n    <body>\n      <script type=\'text/javascript\' src=\'http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.2/jquery.min.js\'></script>\n      <script type=\'text/javascript\' src=\'https://cdn.firebase.com/v0/firebase.js\'></script>\n      <script type=\'text/javascript\' src=\'/api/v2/mongofb.js\'></script>\n    </body>\n  </html>\n  """\n\napp.listen 3000\nconsole.log "listening: 3000"\n```\n\n\n### Javascript Client\n```\nwindow.db = new mongofb.Database \'http://localhost:3000/api/v2\'\nwindow.cookies = db.collection \'cookies\'\n\ncookies.insert {type: \'chocolate\'}, (err, cookie) ->\n  throw err if err\n  window.cookie = cookie\n\n  cookie.on \'update\', (val) ->\n    console.log \'cookie updated to\', val\n\n  ref = cookie.get \'type\'\n  ref.on \'update\', (val) ->\n    console.log \'cookie.type updated to\', val\n\n  ref.set \'peanut butter\'\n```\n\n### iOS Client\n```\nComing Soon!\n```\n\n### Android Client\n```\nComing Soon!\n```\n\n',
77 silly publish   readmeFilename: 'README.md',
77 silly publish   bugs: { url: 'https://github.com/scien/mongofb/issues' },
77 silly publish   homepage: 'https://github.com/scien/mongofb',
77 silly publish   _id: 'mongofb@0.5.8',
77 silly publish   dist: { shasum: '3554923c03e1d061b517f9e12761c59e9e8cd8df' },
77 silly publish   _from: '.' }
78 verbose url raw mongofb
79 verbose url resolving [ 'https://registry.npmjs.org/', './mongofb' ]
80 verbose url resolved https://registry.npmjs.org/mongofb
81 info trying registry request attempt 1 at 23:49:53
82 http PUT https://registry.npmjs.org/mongofb
83 http 409 https://registry.npmjs.org/mongofb
84 verbose url raw mongofb
85 verbose url resolving [ 'https://registry.npmjs.org/', './mongofb' ]
86 verbose url resolved https://registry.npmjs.org/mongofb
87 info trying registry request attempt 1 at 23:49:54
88 http GET https://registry.npmjs.org/mongofb
89 http 200 https://registry.npmjs.org/mongofb
90 error publish fail Cannot publish over existing version.
90 error publish fail Update the 'version' field in package.json and try again.
90 error publish fail
90 error publish fail If the previous version was published in error, see:
90 error publish fail     npm help unpublish
90 error publish fail
90 error publish fail To automatically increment version numbers, see:
90 error publish fail     npm help version
91 error System Darwin 13.0.2
92 error command "/usr/local/Cellar/node/0.10.24/bin/node" "/usr/local/bin/npm" "publish"
93 error cwd /Users/bryant/dev/scien/mongofb
94 error node -v v0.10.24
95 error npm -v 1.3.21
96 error code EPUBLISHCONFLICT
97 verbose exit [ 1, true ]
